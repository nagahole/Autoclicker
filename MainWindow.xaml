<Window x:Class="Autoclicker.MainWindow"
        xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation"
        xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml"
        xmlns:d="http://schemas.microsoft.com/expression/blend/2008"
        xmlns:mc="http://schemas.openxmlformats.org/markup-compatibility/2006"
        xmlns:local="clr-namespace:Autoclicker"
        mc:Ignorable="d"
        Title="MainWindow" Height="270" Width="550" ResizeMode="CanMinimize"
        SizeToContent="WidthAndHeight"
        Background="#1f2833">
    <Window.Resources>
        <Style x:Key="FocusVisual">
            <Setter Property="Control.Template">
                <Setter.Value>
                    <ControlTemplate>
                        <Rectangle Margin="2" SnapsToDevicePixels="true" Stroke="{DynamicResource {x:Static SystemColors.ControlTextBrushKey}}" StrokeThickness="1" StrokeDashArray="1 2"/>
                    </ControlTemplate>
                </Setter.Value>
            </Setter>
        </Style>
        <SolidColorBrush x:Key="OptionMark.Static.Background" Color="#FF7C7C7C"/>
        <SolidColorBrush x:Key="OptionMark.Static.Border" Color="#FF5F5F5F"/>
        <Style x:Key="OptionMarkFocusVisual">
            <Setter Property="Control.Template">
                <Setter.Value>
                    <ControlTemplate>
                        <Rectangle Margin="14,0,0,0" SnapsToDevicePixels="true" Stroke="{DynamicResource {x:Static SystemColors.ControlTextBrushKey}}" StrokeThickness="1" StrokeDashArray="1 2"/>
                    </ControlTemplate>
                </Setter.Value>
            </Setter>
        </Style>
        <SolidColorBrush x:Key="OptionMark.MouseOver.Background" Color="#FF929292"/>
        <SolidColorBrush x:Key="OptionMark.MouseOver.Border" Color="#FF7D7D7D"/>
        <SolidColorBrush x:Key="OptionMark.MouseOver.Glyph" Color="#FF212121"/>

        <SolidColorBrush x:Key="OptionMark.Disabled.Background" Color="#FFE6E6E6"/>
        <SolidColorBrush x:Key="OptionMark.Disabled.Border" Color="#FFBCBCBC"/>
        <SolidColorBrush x:Key="OptionMark.Disabled.Glyph" Color="#FF707070"/>

        <SolidColorBrush x:Key="OptionMark.Pressed.Background" Color="#FFA6A6A6"/>
        <SolidColorBrush x:Key="OptionMark.Pressed.Border" Color="#FF919191"/>
        <SolidColorBrush x:Key="OptionMark.Pressed.Glyph" Color="#FF212121"/>

        <SolidColorBrush x:Key="OptionMark.Static.Glyph" Color="#FF212121"/>

        <Style x:Key="CheckBoxStyle1" TargetType="{x:Type CheckBox}">
            <Setter Property="FocusVisualStyle" Value="{StaticResource FocusVisual}"/>
            <Setter Property="Background" Value="{StaticResource OptionMark.Static.Background}"/>
            <Setter Property="BorderBrush" Value="{StaticResource OptionMark.Static.Border}"/>
            <Setter Property="Foreground" Value="{DynamicResource {x:Static SystemColors.ControlTextBrushKey}}"/>
            <Setter Property="BorderThickness" Value="1"/>
            <Setter Property="Template">
                <Setter.Value>
                    <ControlTemplate TargetType="{x:Type CheckBox}">
                        <Grid x:Name="templateRoot" Background="Transparent" SnapsToDevicePixels="True">
                            <Grid.ColumnDefinitions>
                                <ColumnDefinition Width="Auto"/>
                                <ColumnDefinition Width="*"/>
                            </Grid.ColumnDefinitions>
                            <Border x:Name="checkBoxBorder" BorderBrush="{TemplateBinding BorderBrush}" BorderThickness="{TemplateBinding BorderThickness}" Background="{TemplateBinding Background}" HorizontalAlignment="{TemplateBinding HorizontalContentAlignment}" Margin="1" VerticalAlignment="{TemplateBinding VerticalContentAlignment}">
                                <Grid x:Name="markGrid">
                                    <Path x:Name="optionMark" Data="F1 M 9.97498,1.22334L 4.6983,9.09834L 4.52164,9.09834L 0,5.19331L 1.27664,3.52165L 4.255,6.08833L 8.33331,1.52588e-005L 9.97498,1.22334 Z " Fill="{StaticResource OptionMark.Static.Glyph}" Margin="1" Opacity="0" Stretch="None"/>
                                    <Rectangle x:Name="indeterminateMark" Fill="{StaticResource OptionMark.Static.Glyph}" Margin="2" Opacity="0"/>
                                </Grid>
                            </Border>
                            <ContentPresenter x:Name="contentPresenter" Grid.Column="1" Focusable="False" HorizontalAlignment="{TemplateBinding HorizontalContentAlignment}" Margin="{TemplateBinding Padding}" RecognizesAccessKey="True" SnapsToDevicePixels="{TemplateBinding SnapsToDevicePixels}" VerticalAlignment="{TemplateBinding VerticalContentAlignment}"/>
                        </Grid>
                        <ControlTemplate.Triggers>
                            <Trigger Property="HasContent" Value="true">
                                <Setter Property="FocusVisualStyle" Value="{StaticResource OptionMarkFocusVisual}"/>
                                <Setter Property="Padding" Value="4,-1,0,0"/>
                            </Trigger>
                            <Trigger Property="IsMouseOver" Value="true">
                                <Setter Property="Background" TargetName="checkBoxBorder" Value="{StaticResource OptionMark.MouseOver.Background}"/>
                                <Setter Property="BorderBrush" TargetName="checkBoxBorder" Value="{StaticResource OptionMark.MouseOver.Border}"/>
                                <Setter Property="Fill" TargetName="optionMark" Value="{StaticResource OptionMark.MouseOver.Glyph}"/>
                                <Setter Property="Fill" TargetName="indeterminateMark" Value="{StaticResource OptionMark.MouseOver.Glyph}"/>
                            </Trigger>
                            <Trigger Property="IsEnabled" Value="false">
                                <Setter Property="Background" TargetName="checkBoxBorder" Value="{StaticResource OptionMark.Disabled.Background}"/>
                                <Setter Property="BorderBrush" TargetName="checkBoxBorder" Value="{StaticResource OptionMark.Disabled.Border}"/>
                                <Setter Property="Fill" TargetName="optionMark" Value="{StaticResource OptionMark.Disabled.Glyph}"/>
                                <Setter Property="Fill" TargetName="indeterminateMark" Value="{StaticResource OptionMark.Disabled.Glyph}"/>
                            </Trigger>
                            <Trigger Property="IsPressed" Value="true">
                                <Setter Property="Background" TargetName="checkBoxBorder" Value="{StaticResource OptionMark.Pressed.Background}"/>
                                <Setter Property="BorderBrush" TargetName="checkBoxBorder" Value="{StaticResource OptionMark.Pressed.Border}"/>
                                <Setter Property="Fill" TargetName="optionMark" Value="{StaticResource OptionMark.Pressed.Glyph}"/>
                                <Setter Property="Fill" TargetName="indeterminateMark" Value="{StaticResource OptionMark.Pressed.Glyph}"/>
                            </Trigger>
                            <Trigger Property="IsChecked" Value="true">
                                <Setter Property="Opacity" TargetName="optionMark" Value="1"/>
                                <Setter Property="Opacity" TargetName="indeterminateMark" Value="0"/>
                                <Setter Property="Background" TargetName="markGrid" Value="{x:Null}" />
                            </Trigger>
                            <Trigger Property="IsChecked" Value="{x:Null}">
                                <Setter Property="Opacity" TargetName="optionMark" Value="0"/>
                                <Setter Property="Opacity" TargetName="indeterminateMark" Value="1"/>
                            </Trigger>
                        </ControlTemplate.Triggers>
                    </ControlTemplate>
                </Setter.Value>
            </Setter>
        </Style>
    </Window.Resources>
    <Grid>
        <!--#region Main Window-->
        <Button Name="ToggleAdvancedSettingsButton" BorderBrush="{x:Null}" Foreground="{x:Null}" BorderThickness="0" Click="ToggleAdvancedSettingsButton_Click"  VerticalAlignment="Top" HorizontalAlignment="Stretch" Height="15" Margin="0,0,-1,0">
            <Button.Style>
                <Style TargetType="{x:Type Button}">
                    <Setter Property="Background" Value="#FF2E3036"/>
                    <Setter Property="Template">
                        <Setter.Value>
                            <ControlTemplate TargetType="{x:Type Button}">
                                <Border Background="{TemplateBinding Background}">
                                    <ContentPresenter HorizontalAlignment="Center" VerticalAlignment="Center"/>
                                </Border>
                            </ControlTemplate>
                        </Setter.Value>
                    </Setter>
                    <Style.Triggers>
                        <Trigger Property="IsMouseOver" Value="True">
                            <Setter Property="Background" Value="#FF33353C"/>
                        </Trigger>
                    </Style.Triggers>
                </Style>
            </Button.Style>
        </Button>

        <TextBlock Name="AdvancedSettingsToggleSymbol" TextAlignment="Center" HorizontalAlignment="Center" Foreground="Gray" VerticalAlignment="Top" Height="17" Margin="267,-1,267,0" RenderTransformOrigin="0.5,0.5" Width="10">
            <TextBlock.RenderTransform>
                <RotateTransform Angle="0"/>
            </TextBlock.RenderTransform>⥥</TextBlock>

        <Button FocusVisualStyle="{x:Null}" Name="LMBButton"  BorderBrush="{x:Null}" Foreground="{x:Null}" BorderThickness="0" Click="LMB_ChangeHotkey_Click" VerticalAlignment="Top" HorizontalAlignment="Stretch" Height="59" Margin="0,15,272,0">
            <Button.Style>
                <Style TargetType="{x:Type Button}">
                    <Setter Property="Background" Value="#FF232429"/>
                    <Setter Property="Template">
                        <Setter.Value>
                            <ControlTemplate TargetType="{x:Type Button}">
                                <Border Background="{TemplateBinding Background}">
                                    <ContentPresenter HorizontalAlignment="Center" VerticalAlignment="Center"/>
                                </Border>
                            </ControlTemplate>
                        </Setter.Value>
                    </Setter>
                    <Style.Triggers>
                        <Trigger Property="IsMouseOver" Value="True">
                            <Setter Property="Background" Value="#FF28292C"/>
                        </Trigger>
                    </Style.Triggers>
                </Style>
            </Button.Style>
            <TextBlock>A</TextBlock>
        </Button>

        <TextBlock IsHitTestVisible="False" TextAlignment="Center" VerticalAlignment="Top" Name="LMBHotkeyText" Text="MouseButton3" Foreground="#FFC5C6C7" FontSize="13" Margin="18,28,0,0" HorizontalAlignment="Left" Width="235"/>
        <TextBlock IsHitTestVisible="False" TextAlignment="Center" VerticalAlignment="Top" Text="[LMB]" Foreground="#FF6A6A6A" FontSize="12" Margin="100,49,0,0" HorizontalAlignment="Left" Width="70"/>

        <Rectangle Margin="0,74,0,0" Fill="#FF313336" HorizontalAlignment="Left" VerticalAlignment="Top" Width="200" Height="40"/>
        <TextBox HorizontalAlignment="Left" VerticalAlignment="Top" FontSize="17" BorderThickness="0" TextChanged="LMBMinCpsTextBox_TextChanged" Name="LMBMinCpsTextBox" Text="5" Padding="3" TextAlignment="Center" Margin="0,78,0,0" Background="{x:Null}" BorderBrush="{x:Null}" Foreground="#FF849795" SelectionBrush="{x:Null}" Width="200" CaretBrush="#CC3E3E3E"></TextBox>
        <Rectangle Margin="0,116,0,0" Fill="#FF313336" HorizontalAlignment="Left" VerticalAlignment="Top" Height="40" Width="200"></Rectangle>
        <TextBox HorizontalAlignment="Left" VerticalAlignment="Top" FontSize="17" BorderThickness="0" TextChanged="LMBMaxCpsTextBox_TextChanged" Name="LMBMaxCpsTextBox" Text="8" Padding="3" TextAlignment="Center" Margin="0,120,0,0" Background="{x:Null}" BorderBrush="{x:Null}" Foreground="#FF849795" SelectionBrush="{x:Null}" Width="200"/>

        <TextBlock TextAlignment="Center" HorizontalAlignment="Center" VerticalAlignment="Top" FontSize="15" Foreground="#FF45A29E" Margin="244,125,244,0">Max Cps</TextBlock>
        <TextBlock TextAlignment="Center" HorizontalAlignment="Center" VerticalAlignment="Top" FontSize="15" Foreground="#FF45A29E" Margin="244,83,246,0">Min Cps</TextBlock>

        <Button Name="RMBButton" BorderBrush="{x:Null}" Foreground="{x:Null}" BorderThickness="0" Click="RMB_ChangeHotkey_Click" VerticalAlignment="Top" HorizontalAlignment="Stretch" Height="59" Margin="272,15,-1,0">
            <Button.Style>
                <Style TargetType="{x:Type Button}">
                    <Setter Property="Background" Value="#FF232429"/>
                    <Setter Property="Template">
                        <Setter.Value>
                            <ControlTemplate TargetType="{x:Type Button}">
                                <Border Background="{TemplateBinding Background}">
                                    <ContentPresenter HorizontalAlignment="Center" VerticalAlignment="Center"/>
                                </Border>
                            </ControlTemplate>
                        </Setter.Value>
                    </Setter>
                    <Style.Triggers>
                        <Trigger Property="IsMouseOver" Value="True">
                            <Setter Property="Background" Value="#FF28292C"/>
                        </Trigger>
                    </Style.Triggers>
                </Style>
            </Button.Style>
        </Button>

        <TextBlock IsHitTestVisible="False" TextAlignment="Center" VerticalAlignment="Top" HorizontalAlignment="Left" x:Name="RMBHotkeyText" Text="MouseButton3" Foreground="#FFC5C6C7" FontSize="13" Margin="290,28,0,0" Width="237" Height="17"/>
        <TextBlock IsHitTestVisible="False" TextAlignment="Center" VerticalAlignment="Top" HorizontalAlignment="Left" Text="[RMB]" Foreground="#FF6A6A6A" FontSize="12" Margin="388,49,0,0" Width="42" Height="16"/>

        <Label HorizontalAlignment="Left" VerticalAlignment="Top" FontSize="10" Margin="194,104,0,0" Foreground="#FF396361" RenderTransformOrigin="0.5,0.5">
            <Label.RenderTransform>
                <TransformGroup>
                    <ScaleTransform/>
                    <SkewTransform/>
                    <RotateTransform Angle="90"/>
                    <TranslateTransform/>
                </TransformGroup>
            </Label.RenderTransform> LMB
        </Label>
        <Label HorizontalAlignment="Right" VerticalAlignment="Top" FontSize="10" Margin="0,104,193,0" Foreground="#FF396361" RenderTransformOrigin="0.5,0.5" >
            <Label.RenderTransform>
                <TransformGroup>
                    <ScaleTransform/>
                    <SkewTransform/>
                    <RotateTransform Angle="-90"/>
                    <TranslateTransform/>
                </TransformGroup>
            </Label.RenderTransform> RMB
        </Label>

        <Rectangle Margin="0,74,-1,0" Fill="#FF313336" HorizontalAlignment="Right" VerticalAlignment="Top" Width="201" Height="40"/>
        <TextBox HorizontalAlignment="Left" VerticalAlignment="Top" FontSize="17" BorderThickness="0" TextChanged="RMBMinCpsTextBox_TextChanged" x:Name="RMBMinCpsTextBox" Text="5" Padding="3" TextAlignment="Center" Margin="344,78,0,0" Background="{x:Null}" BorderBrush="{x:Null}" Foreground="#FF849795" SelectionBrush="{x:Null}" Width="200"/>
        <Rectangle Margin="0,116,-1,0" Fill="#FF313336" HorizontalAlignment="Right" VerticalAlignment="Top" Height="40" Width="201"/>
        <TextBox HorizontalAlignment="Left" VerticalAlignment="Top" FontSize="17" BorderThickness="0" TextChanged="RMBMaxCpsTextBox_TextChanged" x:Name="RMBMaxCpsTextBox" Text="8" Padding="3" TextAlignment="Center" Margin="344,120,0,0" Background="{x:Null}" BorderBrush="{x:Null}" Foreground="#FF849795" SelectionBrush="{x:Null}" Width="200"/>

        <Button ToolTip="Blockhits whenever left autoclicker is on" Name="BlockhitChangeHotkey" Click="BlockhitChangeHotkey_Click" BorderBrush="{x:Null}" Foreground="{x:Null}" BorderThickness="0" VerticalAlignment="Top" HorizontalAlignment="Stretch" Height="60" Margin="0,156,-1,0">
            <Button.Style>
                <Style TargetType="{x:Type Button}">
                    <Setter Property="Background" Value="#FF232429"/>
                    <Setter Property="Template">
                        <Setter.Value>
                            <ControlTemplate TargetType="{x:Type Button}">
                                <Border Background="{TemplateBinding Background}">
                                    <ContentPresenter HorizontalAlignment="Center" VerticalAlignment="Center"/>
                                </Border>
                            </ControlTemplate>
                        </Setter.Value>
                    </Setter>
                    <Style.Triggers>
                        <Trigger Property="IsMouseOver" Value="True">
                            <Setter Property="Background" Value="#FF28292C"/>
                        </Trigger>
                    </Style.Triggers>
                </Style>
            </Button.Style>
        </Button>
        <TextBlock IsHitTestVisible="False" TextAlignment="Center" VerticalAlignment="Top" HorizontalAlignment="Left" Name="BlockhitHotkeyText" Text="MouseButton3" Foreground="#FFC5C6C7" FontSize="13" Margin="37,169,0,0" Width="470"/>
        <TextBlock IsHitTestVisible="False" TextAlignment="Center" VerticalAlignment="Top" HorizontalAlignment="Left" Text="Blockhit" Foreground="#FF6A6A6A" FontSize="12" Margin="218,190,0,0" Width="108"/>


        <Button BorderBrush="{x:Null}" Foreground="{x:Null}" BorderThickness="0" Click="PanicButton_Click" VerticalAlignment="Top" Height="25" Margin="0,216,-1,0">
            <Button.Style>
                <Style TargetType="{x:Type Button}">
                    <Setter Property="Background" Value="#FF852727"/>
                    <Setter Property="Template">
                        <Setter.Value>
                            <ControlTemplate TargetType="{x:Type Button}">
                                <Border Background="{TemplateBinding Background}">
                                    <ContentPresenter HorizontalAlignment="Center" VerticalAlignment="Center"/>
                                </Border>
                            </ControlTemplate>
                        </Setter.Value>
                    </Setter>
                    <Style.Triggers>
                        <Trigger Property="IsMouseOver" Value="True">
                            <Setter Property="Background" Value="#FF814949"/>
                        </Trigger>
                    </Style.Triggers>
                </Style>
            </Button.Style>

            <TextBlock Name="PanicButtonTextBlock"  FontSize="13" Foreground="#FFC3AFAF">Panic Button [Multiply]</TextBlock>
        </Button>


        <!--#endregion-->

        <!-- Advanced Settings -->
        <Grid Visibility="Hidden" Background="#FF151B23" Name="Advanced_Settings" Margin="0,15,-1,0" Height="226" VerticalAlignment="Top">
            <TextBlock TextAlignment="Center" HorizontalAlignment="Left" VerticalAlignment="Top" FontSize="10" Foreground="#FF45A29E" Margin="72,2,0,0" Width="28">LMB</TextBlock>
            <TextBlock TextAlignment="Center" VerticalAlignment="Top" FontSize="10" Foreground="#FF45A29E" Margin="446,2,0,0" HorizontalAlignment="Left" Width="28">RMB</TextBlock>

            <TextBlock ToolTip="What fraction of the target CPS the rampup begins at" TextAlignment="Center" VerticalAlignment="Top" FontSize="13" Foreground="#FF37817E" Margin="199,25,199,0" HorizontalAlignment="Center" Width="147">Rampup Initial</TextBlock>
            <Rectangle Margin="0,18,0,0" Fill="#FF27282B" HorizontalAlignment="Right" VerticalAlignment="Top" Width="171" Height="30"/>
            <TextBox Name="RMBRampupInitial" TextChanged="RMBRampupInitial_TextChanged" HorizontalAlignment="Left" VerticalAlignment="Top" FontSize="17" BorderThickness="0" Text="0.5" Padding="3" TextAlignment="Center" Margin="374,18,0,0" Background="{x:Null}" BorderBrush="{x:Null}" Foreground="#FF849795" SelectionBrush="{x:Null}" Width="170"/>
            <Rectangle Margin="0,18,0,0" Fill="#FF27282B" HorizontalAlignment="Left" VerticalAlignment="Top" Width="170" Height="30"/>
            <TextBox Name="LMBRampupInitial" TextChanged="LMBRampupInitial_TextChanged" HorizontalAlignment="Left" VerticalAlignment="Top" FontSize="17" BorderThickness="0"  Text="0.5" Padding="3" TextAlignment="Center" Margin="0,18,0,0" Background="{x:Null}" BorderBrush="{x:Null}" Foreground="#FF849795" SelectionBrush="{x:Null}" Width="170"/>

            <TextBlock ToolTip="How long the rampup takes in milliseconds" TextAlignment="Center" VerticalAlignment="Top" FontSize="13" Foreground="#FF37817E" Margin="199,57,199,0" HorizontalAlignment="Center" Width="147">Rampup Duration</TextBlock>
            <Rectangle Margin="0,50,0,0" Fill="#FF27282B" HorizontalAlignment="Right" VerticalAlignment="Top" Width="171" Height="30"/>
            <TextBox Name="RMBRampupDuration" TextChanged="RMBRampupDuration_TextChanged" HorizontalAlignment="Left" VerticalAlignment="Top" FontSize="17" BorderThickness="0" Text="800" Padding="3" TextAlignment="Center" Margin="374,50,0,0" Background="{x:Null}" BorderBrush="{x:Null}" Foreground="#FF849795" SelectionBrush="{x:Null}" Width="170"/>
            <Rectangle Margin="0,50,0,0" Fill="#FF27282B" HorizontalAlignment="Left" VerticalAlignment="Top" Width="170" Height="30"/>
            <TextBox Name="LMBRampupDuration" TextChanged="LMBRampupDuration_TextChanged" HorizontalAlignment="Left" VerticalAlignment="Top" FontSize="17" BorderThickness="0" Text="800" Padding="3" TextAlignment="Center" Margin="0,50,0,0" Background="{x:Null}" BorderBrush="{x:Null}" Foreground="#FF849795" SelectionBrush="{x:Null}" Width="170"/>

            <TextBlock ToolTip="Positive leans towards the higher CPS, while negative leans towards the lower CPS" TextAlignment="Center" VerticalAlignment="Top" FontSize="13" Foreground="#FF37817E" Margin="199,89,199,0" HorizontalAlignment="Center" Width="147">Bias</TextBlock>
            <Rectangle Margin="0,82,0,0" Fill="#FF27282B" HorizontalAlignment="Right" VerticalAlignment="Top" Width="171" Height="30"/>
            <TextBox Name="RMBBiasTextBox" TextChanged="RMBBiasTextBox_TextChanged" HorizontalAlignment="Left" VerticalAlignment="Top" FontSize="17" BorderThickness="0" Text="0" Padding="3" TextAlignment="Center" Margin="374,82,0,0" Background="{x:Null}" BorderBrush="{x:Null}" Foreground="#FF849795" SelectionBrush="{x:Null}" Width="170"/>
            <Rectangle Margin="0,82,0,0" Fill="#FF27282B" HorizontalAlignment="Left" VerticalAlignment="Top" Width="170" Height="30"/>
            <TextBox Name="LMBBiasTextBox" TextChanged="LMBBiasTextBox_TextChanged" HorizontalAlignment="Left" VerticalAlignment="Top" FontSize="17" BorderThickness="0" Text="0" Padding="3" TextAlignment="Center" Margin="0,82,0,0" Background="{x:Null}" BorderBrush="{x:Null}" Foreground="#FF849795" SelectionBrush="{x:Null}" Width="170"/>

            <TextBlock ToolTip="Adds additional deviation range on top of base randomisation. Useful for high bias values" TextAlignment="Center" VerticalAlignment="Top" FontSize="13" Foreground="#FF37817E" Margin="199,121,199,0" HorizontalAlignment="Center" Width="147">Additional Deviation</TextBlock>
            <Rectangle Margin="0,114,0,0" Fill="#FF27282B" HorizontalAlignment="Right" VerticalAlignment="Top" Width="171" Height="30"/>
            <TextBox Name="RMBMiniDeviationTextBox" TextChanged="RMBMiniDeviationTextBox_TextChanged" HorizontalAlignment="Left" VerticalAlignment="Top" FontSize="17" BorderThickness="0" Text="0" Padding="3" TextAlignment="Center" Margin="374,115,0,0" Background="{x:Null}" BorderBrush="{x:Null}" Foreground="#FF849795" SelectionBrush="{x:Null}" Width="170"/>
            <Rectangle Margin="0,114,0,0" Fill="#FF27282B" HorizontalAlignment="Left" VerticalAlignment="Top" Width="170" Height="30"/>
            <TextBox Name="LMBMiniDeviationTextBox" TextChanged="LMBMiniDeviationTextBox_TextChanged" HorizontalAlignment="Left" VerticalAlignment="Top" FontSize="17" BorderThickness="0" Text="0" Padding="3" TextAlignment="Center" Margin="0,114,0,0" Background="{x:Null}" BorderBrush="{x:Null}" Foreground="#FF849795" SelectionBrush="{x:Null}" Width="170"/>

            <TextBlock ToolTip="If disabled, only one side may be active at a time" VerticalAlignment="Top" HorizontalAlignment="Left" FontSize="12" Foreground="#FF37817E" Margin="38,156,0,0">Both sides can be active</TextBlock>
            <CheckBox IsChecked="False" Name="BothSidesCanBeActive" Checked="BothSidesCanBeActive_Checked" Unchecked="BothSidesCanBeActive_Unchecked" Style="{DynamicResource CheckBoxStyle1}" HorizontalAlignment="Left" VerticalAlignment="Top" Margin="19,157,0,0" />

            <TextBlock ToolTip="Pressing left click will disable the right autoclicker if it is active and vice versa" VerticalAlignment="Top" HorizontalAlignment="Left" FontSize="12" Foreground="#FF37817E" Margin="38,181,0,0">Clicks disables other side</TextBlock>
            <CheckBox IsChecked="True" Name="ClicksDisablesOtherSide" Checked="ClicksDisablesOtherSide_Checked" Unchecked="ClicksDisablesOtherSide_Unchecked" Style="{DynamicResource CheckBoxStyle1}" HorizontalAlignment="Left" VerticalAlignment="Top" Margin="19,182,0,0" />

            <TextBlock ToolTip="Pressing any number key will disable both sides' autoclickers" VerticalAlignment="Top" HorizontalAlignment="Left" FontSize="12" Foreground="#FF37817E" Margin="213,156,0,0">Number disables autoclicker</TextBlock>
            <CheckBox IsChecked="True" Name="NumberDisablesAutoclicker" Checked="NumberDisablesAutoclicker_Checked" Unchecked="NumberDisablesAutoclicker_Unchecked" Style="{DynamicResource CheckBoxStyle1}" HorizontalAlignment="Left" VerticalAlignment="Top" Margin="194,157,0,0" />

            <TextBlock ToolTip="Will play a small sound when toggling on or off" VerticalAlignment="Top" HorizontalAlignment="Left" FontSize="12" Foreground="#FF37817E" Margin="213,181,0,0">Play toggle sounds</TextBlock>
            <CheckBox IsChecked="True" Name="PlayToggleSounds" Checked="PlayToggleSounds_Checked" Unchecked="PlayToggleSounds_Unchecked" Style="{DynamicResource CheckBoxStyle1}" HorizontalAlignment="Left" VerticalAlignment="Top" Margin="194,182,0,0" />

            <TextBlock ToolTip="Will play a small sound whenever the autoclicker clicks" VerticalAlignment="Top" HorizontalAlignment="Left" FontSize="12" Foreground="#FF37817E" Margin="408,156,0,0">Play click sounds</TextBlock>
            <CheckBox IsChecked="False" Name="PlayClickSounds" Checked="PlayClickSounds_Checked" Unchecked="PlayClickSounds_Unchecked" Style="{DynamicResource CheckBoxStyle1}" HorizontalAlignment="Left" VerticalAlignment="Top" Margin="389,157,0,0" />

            <!--
            <TextBlock VerticalAlignment="Top" HorizontalAlignment="Left" FontSize="12" Foreground="#FF37817E" Margin="394,182,0,0"></TextBlock>
            <CheckBox Style="{DynamicResource CheckBoxStyle1}" HorizontalAlignment="Left" VerticalAlignment="Top" Margin="369,183,0,0" />
-->

            <Button Name="ExportButton" Click="ExportButton_Click" BorderBrush="{x:Null}" Foreground="{x:Null}" BorderThickness="0" VerticalAlignment="Top" HorizontalAlignment="Stretch" Height="18" Margin="0,209,385,-1">
                <Button.Style>
                    <Style TargetType="{x:Type Button}">
                        <Setter Property="Background" Value="#FF425695"/>
                        <Setter Property="Template">
                            <Setter.Value>
                                <ControlTemplate TargetType="{x:Type Button}">
                                    <Border Background="{TemplateBinding Background}">
                                        <ContentPresenter HorizontalAlignment="Center" VerticalAlignment="Center"/>
                                    </Border>
                                </ControlTemplate>
                            </Setter.Value>
                        </Setter>
                        <Style.Triggers>
                            <Trigger Property="IsMouseOver" Value="True">
                                <Setter Property="Background" Value="#FF475DA0"/>
                            </Trigger>
                        </Style.Triggers>
                    </Style>
                </Button.Style>
                <TextBlock Foreground="#FF89A3F5" Height="19">Export Profile</TextBlock>
            </Button>
            <Rectangle Margin="160,210,0,-1" Fill="#FF27282B" HorizontalAlignment="Left" VerticalAlignment="Top" Width="281" Height="17"/>
            <TextBox Name="ImportProfileTextbox" HorizontalAlignment="Left" VerticalAlignment="Top" FontSize="10" BorderThickness="0" Text="" Padding="1" TextAlignment="Center" Margin="160,210,0,-1" Background="{x:Null}" BorderBrush="{x:Null}" Foreground="#FF849795" SelectionBrush="{x:Null}" Width="281" Height="17"/>
            <Button Name="ImportProfileButton" Click="ImportProfileButton_Click" BorderBrush="{x:Null}" Foreground="{x:Null}" BorderThickness="0" VerticalAlignment="Top" HorizontalAlignment="Stretch" Height="17" Margin="441,210,0,-1">
                <Button.Style>
                    <Style TargetType="{x:Type Button}">
                        <Setter Property="Background" Value="#FF27852B"/>
                        <Setter Property="Template">
                            <Setter.Value>
                                <ControlTemplate TargetType="{x:Type Button}">
                                    <Border Background="{TemplateBinding Background}">
                                        <ContentPresenter HorizontalAlignment="Center" VerticalAlignment="Center"/>
                                    </Border>
                                </ControlTemplate>
                            </Setter.Value>
                        </Setter>
                        <Style.Triggers>
                            <Trigger Property="IsMouseOver" Value="True">
                                <Setter Property="Background" Value="#FF2A912E"/>
                            </Trigger>
                        </Style.Triggers>
                    </Style>
                </Button.Style>
                <TextBlock Foreground="#FF77CB7A" Height="19"><Run Text="Import Profile"/></TextBlock>
            </Button>
        </Grid>

    </Grid>
</Window>